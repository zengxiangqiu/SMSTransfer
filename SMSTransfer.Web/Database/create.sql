
DROP TABLE IF EXISTS SMSTELEPHONES;
CREATE TABLE SMSTELEPHONES(
   ID INTEGER PRIMARY KEY   AUTOINCREMENT,
   TELEPHONE      TEXT      NOT NULL,
   AREA      TEXT      NOT NULL,
   CITY      TEXT      NOT NULL
);

DROP TABLE IF EXISTS SMSUsers;
CREATE TABLE SMSUsers(
   ID INTEGER PRIMARY KEY   AUTOINCREMENT,
   USERKEY    TEXT      NOT NULL,
   USERNAME TEXT NOT NULL,
   PROJECTID TEXT NOT NULL,
   POINTS INTEGER NOT NULL,
   STATUS BOOLEAN NOT NULL,
   CREATETIME DATETIME NOT NULL,
   LASTMODTIME DATETIME NOT NULL
);

DROP TABLE IF EXISTS SMSReChargeLog;

CREATE TABLE SMSReChargeLog(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    USERKEY TEXT NOT NULL,
    CURPOINTS INTEGER NOT NULL,
    ADDPOINTS INTEGER NOT NULL,
    LASTMODBY TEXT NOT NULL,
    LASTMODTIME DATETIME NOT NULL
);


DROP TABLE IF EXISTS SMSLogs;
CREATE TABLE SMSLogs(
   ID INTEGER PRIMARY KEY   AUTOINCREMENT,
   USERKEY    TEXT      NOT NULL,
   TELEPHONE      TEXT      NOT NULL,
   TARGETPHONE TEXT   NULL,
   CONTENT TEXT      NULL,
   POINTS INTEGER NOT NULL,
   REMARK TEXT ,
   CREATETIME DATETIME NOT NULL,
   LASTMODTIME DATETIME NOT NULL
);


DROP TABLE IF EXISTS SMSProjects;
CREATE TABLE SMSProjects(
    ID INTEGER PRIMARY KEY   AUTOINCREMENT,
    PROJECTNAME TEXT NOT NULL,
    AREA TEXT
);

--INSERT INTO SMSProjects(PROJECTNAME,AREAS)VALUES(@PROJECTNAME,@AREAS);

--UPDATE SMSProjects SET PROJECTNAME=@PROJECTNAME,AREAS=@AREAS WHERE ID=@ID;

DROP TABLE IF EXISTS SMSUserPermissions;
CREATE TABLE SMSUserPermissions(
    ID INTEGER PRIMARY KEY   AUTOINCREMENT,
    PROJECTID INTEGER NOT NULL,
    USERID INTEGER NOT NULL
);

SELECT * FROM SMSUserPermissions PER INNER JOIN SMSProjects PRO ON PER.PROJECTID = PRO.ID  WHERE USERID=@USERID;

--INSERT INTO SMSUserPermissions(PROJECTIDS,USERID)VALUES(@PROJECTIDS,@USERID);
--UPDATE SMSUserPermissions SET PROJECTIDS=@PROJECTIDS WHERE ID = @ID AND USERID;

-- SELECT  PER.ID, PRO.ID AS PROJECTID,USER.ID AS USERID,USER.USERNAME,PRO.PROJECTNAME FROM SMSUsers USER LEFT JOIN SMSUserPermissions PER ON USER.ID = PER.USERID LEFT JOIN SMSProjects PRO ON PRO.ID= PER.PROJECTID;

SELECT TEL.* FROM SMSTELEPHONES TEL WHERE NOT EXISTS(SELECT * FROM SMSLogs LOG WHERE  TEL.TELEPHONE =LOG.TELEPHONE AND CREATETIME = @CREATETIME ) AND AREA=@AREA AND CITY = @CITY    LIMIT 1;

SELECT PER.ID,USER.USERNAME FROM SMSUsers USER LEFT JOIN SMSUserPermissions PER ON USER.ID = PER.USERID;

INSERT INTO SMSUsers(USERKEY, USERNAME,PROJECTID,POINTS,STATUS,CREATETIME,LASTMODTIME)VALUES('649cf2e3','测试','重庆2010',10,TRUE,'2020-11-16','2020-11-16');

INSERT INTO SMSTELEPHONES(TELEPHONE, AREA,CITY)VALUES('15958847895','广西','桂林');
INSERT INTO SMSTELEPHONES(TELEPHONE, AREA,CITY)VALUES('15958847889','广西','桂林');
INSERT INTO SMSTELEPHONES(TELEPHONE, AREA,CITY)VALUES('15958847810','广西','桂林');

INSERT INTO SMSTELEPHONES(TELEPHONE, AREA,CITY)VALUES('15958847880','广东','深圳');
INSERT INTO SMSTELEPHONES(TELEPHONE, AREA,CITY)VALUES('12258847111','广东','深圳');

--INSERT INTO SMSReChargeLog(USERKEY,CURPOINTS,ADDPOINTS,LASTMODBY,LASTMODTIME)VALUES(@USERKEY,@CURPOINTS,@ADDPOINTS,@LASTMODBY,@LASTMODTIME);

--INSERT INTO SMSLogs(USERKEY,TELEPHONE,TARGETPHONE,CONTENT,POINTS,CREATETIME,LASTMODTIME)VALUES(@USERKEY,@TELEPHONE,@TARGETPHONE,@CONTENT,@POINTS,@CREATETIME,@LASTMODTIME);



/*
SELECT TEL.*
FROM SMSTELEPHONES TEL
WHERE EXISTS (
		SELECT 1
		FROM SMSLogs LOG
		WHERE LOG.USERKEY = '649cf2e3'
			--AND LOG.CREATETIME = '2020-11-13'
			AND LOG.TELEPHONE = TEL.TELEPHONE
		) AND TEL.TELEPHONE='15958847889' LIMIT 1 ;
*/

DELETE FROM SMSLogs WHERE USERKEY = '649cf2e3';

UPDATE SMSUsers SET POINTS=10  WHERE USERKEY = '649cf2e3';
        
--随机取不重复号码
--SELECT TEL.* FROM SMSTELEPHONES TEL WHERE NO EXISTS(SELECT 1 FROM SMSLogs LOG WHERE USERKEY = {} AND TEL.TELEPHONE =LOG.TELEPHONE AND LASTMODTIME = {} ) AND AREA={} AND CITY = {} LIMIT 1;

--指定取已取号码
--SELECT TEL.* FROM SMSTELEPHONES TEL WHERE EXISTS(SELECT 1 FROM SMSLogs LOG WHERE LOG.USERKEY=@USERKEY AND LOG.CREATETIME=@CREATETIME AND LOG.TELEPHONE=@TELEPHONE) LIMIT 1;

--INSERT INTO SMSLogs(USERKEY,TELEPHONE,COUNTOFSENT,CREATETIME,LASTMODTIME)VALUES(@USERKEY,@TELEPHONE,0,@CREATETIME,'@LASTMODTIME');
--SELECT * FROM SMSLogs WHERE USERKEY=@USERKEY AND TELEPHONE=@TELEPHONE AND LASTMODTIME>DATE(@LASTMODTIME);


--UPDATE SMSLogs SET COUNTOFSENT = COUNTOFSENT+1,LASTMODTIME = @LASTMODTIME WHERE CREATETIME=@CREATETIME  AND USERKEY = @USERKEY;


--SELECT AREA,CITY FROM SMSTELEPHONES GROUP BY AREA,CITY
